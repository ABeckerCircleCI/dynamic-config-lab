#!/usr/bin/env python3

solution = """
version: 2.1

jobs:
  install-dependencies:
    docker:
      - image: cimg/go:1.21
    resource_class: small
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-{{ arch }}-{{ checksum "go.sum" }}
      - run: go mod download
      - save_cache:
          key: go-mod-{{ arch }}-{{ checksum "go.sum" }}
          paths:
            - /home/circleci/go/pkg/mod
      - persist_to_workspace:
          root: ~/
          paths:
            - project
            - go/pkg/mod

  install-dependencies-osx:
    macos:
      xcode: 14.2
    resource_class: macos.x86.medium.gen2
    steps:
      - run: 
          name: Install dependencies
          command: |
            # TODO
  test:
    docker:
      - image: cimg/go:1.21
      - image: cimg/postgres:15.1
    steps:
      - attach_workspace:
          at: ~/
      # Run the test suite, saving a junit report in the process
      - run: gotestsum --junitfile report.xml
      - store_test_results:
          path: report.xml
      - store_artifacts:
          path: report.xml

  test-split-by-filename:
    docker:
      - image: cimg/go:1.21
    parallelism: 2
    steps:
      - attach_workspace:
          at: ~/
      - run: |
          TESTS=$(circleci tests glob *_test.go | circleci tests split)
          gotestsum --junitfile report.xml $TESTS
      - store_test_results:
          path: report.xml
      - store_artifacts:
          path: report.xml

workflows:
  build-test-deploy:
    jobs:
      - install-dependencies-osx

      - install-dependencies
      - test:
          requires:
            - install-dependencies
      - test-split-by-filename:
          requires:
            - install-dependencies
"""

config_file_path = "/root/project/.circleci/config.yml"
f = open(config_file_path, "w")
f.write(solution)
