#!/bin/bash
set -euxo pipefail

#
# This script runs when the platform check the challenge.
#
# The platform determines if the script was successful using the exit code of this
# script. If the exit code is not 0, the script fails. 
#


if (! grep -qE '^\s*- when:' ~/project/.circleci/config.yml); then
  fail-message "The 'deploy' job must include the 'when' key."
fi

if (! grep -q 'equal:\s*\[ main, << pipeline\.git\.branch >> \]' ~/project/.circleci/config.yml); then
  fail-message "The specified condition for: 'equal' is missing for the 'when' step."
fi

if (! grep -qE '^\s*-\s*run:\s*echo "Run your deployment logic here"' ~/project/.circleci/config.yml); then
  fail-message "The conditional step '- run: echo \"Run your deployment logic here\"' is missing or incorrectly formatted in the 'config.yml' file."
fi

if (! grep -A 3 '\- deploy' ~/project/.circleci/config.yml | grep -q 'context:' && grep -A 1 'context:' ~/project/.circleci/config.yml | grep -q '\- my-lab-context'); then
  fail-message "Make sure you have specified the context key with a value of '- my-lab-context' under your deploy job." >&2
fi

if ! (grep -A 3 '\- hold-for-approval' ~/project/.circleci/config.yml); then
  fail-message "Make sure you have added the hold-for-approval job to your workflow. And set it to require the 'test-split-by-filename' job." >&2
  exit 1
fi

if (! grep -q 'type: approval' ~/project/.circleci/config.yml);  then
    fail-message "Make sure you have set the hold-for-approval job in your workflow to type 'approval'"
fi

if ! (grep -A 3 '\- deploy' ~/project/.circleci/config.yml | grep -q '\- hold-for-approval'); then
  fail-message "Make sure you have specified the requires array for your deploy job to require the hold-for-approval under your workflow." >&2
  exit 1
fi

if (! circleci --skip-update-check config validate ~/project/.circleci/config.yml); then 
  fail-message "Uh oh - your config file isn't valid. Try running 'circleci config validate ~/project/.circleci/config.yml' in the shell to learn more."
fi
